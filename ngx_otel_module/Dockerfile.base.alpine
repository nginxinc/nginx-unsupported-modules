ARG ARCH=amd64
FROM $ARCH/alpine:3.14

ENV GRPC_VERSION_TAG=v1.36.4
ENV OTEL_CPP_VERSION_TAG=v1.8.1

RUN apk add git curl make build-base cmake patch linux-headers curl-dev zlib-dev pcre-dev

RUN set -eux; \
    git clone --depth 1 --shallow-submodules --branch ${GRPC_VERSION_TAG} --recurse-submodules https://github.com/grpc/grpc.git /build/grpc; \
    cd /build/grpc; \
    mkdir build; \
    cd build; \
    cmake \
        -DgRPC_INSTALL=ON \
        -DgRPC_BUILD_TESTS=OFF \
        -DCMAKE_INSTALL_PREFIX=/install \
        -DCMAKE_BUILD_TYPE=Release \
        -DgRPC_BUILD_GRPC_NODE_PLUGIN=OFF \
        -DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN=OFF \
        -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \
        -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \
        -DgRPC_BUILD_GRPC_PYTHON_PLUGIN=OFF \
        -DgRPC_BUILD_GRPC_RUBY_PLUGIN=OFF \
    ..; \
    make -j$(nproc); \
    make install; \
    rm -rf /build/grpc

RUN set -eux; \
    git clone --depth 1 --shallow-submodules --branch ${OTEL_CPP_VERSION_TAG} --recurse-submodules https://github.com/open-telemetry/opentelemetry-cpp /build/opentelemetry-cpp; \
    mkdir /build/opentelemetry-cpp/build; \
    cd /build/opentelemetry-cpp/build; \
    cmake cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/install \
      -DCMAKE_PREFIX_PATH=/install \
      -DWITH_OTLP=ON \
      -DWITH_OTLP_GRPC=ON \
      -DWITH_OTLP_HTTP=OFF \
      -DBUILD_TESTING=OFF \
      -DWITH_EXAMPLES=OFF \
      -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
      ..; \
    make -j$(nproc); \
    make install; \
    rm -rf /build/opentelemetry-cpp
